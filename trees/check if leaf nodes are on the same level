class Solution {
    boolean check(Node root) {
        if (root == null) {
            return true;
        }
        
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        
        boolean firstLeaf = true;
        int level = 0;
        int firstLeafLevel = 0;
        
        while (!q.isEmpty()) {
            int size = q.size();
            
            for (int i = 0; i < size; i++) {
                Node curr = q.poll();
                
                // Check if it's a leaf node
                if (curr.left == null && curr.right == null) {
                    if (firstLeaf) {
                        firstLeafLevel = level;
                        firstLeaf = false;
                    } else if (level != firstLeafLevel) {
                        return false;
                    }
                }
                
                // Add left child to the queue
                if (curr.left != null) {
                    q.offer(curr.left);
                }
                
                // Add right child to the queue
                if (curr.right != null) {
                    q.offer(curr.right);
                }
            }
            level++;
        }
        return true;
    }
}
