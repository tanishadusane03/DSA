lass Tree
{
    
    //Function to check whether a binary tree is balanced or not.
    boolean isBalanced(Node root) {
        if (checkHeight(root) == -1) {
            return false;
        } else {
            return true;
        }
    }

    // Helper function to check the height of the tree.
    // It returns -1 if the tree is not balanced, otherwise it returns the height.
    int checkHeight(Node root) {
        if (root == null) {
            return 0;
        }

        int leftHeight = checkHeight(root.left);
        if (leftHeight == -1) {
            return -1; // Not balanced
        }

        int rightHeight = checkHeight(root.right);
        if (rightHeight == -1) {
            return -1; // Not balanced
        }

        if (Math.abs(leftHeight - rightHeight) > 1) {
            return -1; // Not balanced
        }

        return Math.max(leftHeight, rightHeight) + 1;
    }
    
}
