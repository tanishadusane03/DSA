class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }
        return issym(root.left, root.right);
    }

    static boolean issym(TreeNode left, TreeNode right) {
        // If both left and right are null, they are symmetric
        if (left == null && right == null) {
            return true;
        }
        // If one is null and the other is not, they are not symmetric
        if (left == null || right == null) {
            return false;
        }
        // If values of left and right are not equal, they are not symmetric
        if (left.val != right.val) {
            return false;
        }
        // Recursively check if the left subtree of left and right subtree of right are symmetric
        // and if the right subtree of left and left subtree of right are symmetric
        return issym(left.left, right.right) && issym(left.right, right.left);
    }
}
