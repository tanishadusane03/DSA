class Solution {
    
    public List<Integer> inorderTraversal(TreeNode root) {
         List<Integer> ans=new ArrayList<>();
        if(root==null){
            return ans;
        }
         inorder(root,ans);

        return ans;
        
    }
    public void inorder(TreeNode root,List<Integer> ans){
       if(root==null){
        return;
       }
       TreeNode curr=root;
       while(curr!=null){
        if(curr.left==null){ // that means we have the NODE 
        ans.add(curr.val);
        curr=curr.right;  
        }
        else{ // we need to iterate to the right most eleemtn 
        TreeNode prev=curr.left;
        while(prev.right!=null && prev.right!=curr){
            prev=prev.right;
        }
        if(prev.right==null){
            prev.right=curr;
            curr=curr.left;
        }
        else{
            prev.right=null;
            ans.add(curr.val); // as we are at the last element of the left after which we will get node hence 
            curr=curr.right;
        }

        }
       }
    }
}
