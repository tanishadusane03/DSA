class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums); // Sort to handle duplicates
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        findsub(nums, ans, ds, 0);
        return ans;
    }

    static void findsub(int[] nums, List<List<Integer>> ans, List<Integer> ds, int ind) {
        // Add the current subset to the answer list
        ans.add(new ArrayList<>(ds));
        
        // Recursively explore all subsets
        for (int i = ind; i < nums.length; i++) {
            // Skip duplicates
            if (i > ind && nums[i] == nums[i - 1]) {
                continue;
            }
            ds.add(nums[i]);
            findsub(nums, ans, ds, i + 1);
            ds.remove(ds.size() - 1);
        }
    }
}
