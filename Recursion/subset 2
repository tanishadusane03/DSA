class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> ret=new ArrayList<>();
        List<Integer> temp=new ArrayList<>();
        Arrays.sort(nums);
        backtrack(ret,temp,nums,0);
        return ret;
    
  }

  private void backtrack(List<List<Integer>> resultSets, List<Integer> tempSet,
                         int[] nums, int start) {
   
  resultSets.add(new ArrayList<>(tempSet));
  for(int i=start;i<nums.length;i++){
    if(i!=start && nums[i]==nums[i-1]){
        continue;
    }
    tempSet.add(nums[i]);

    backtrack(resultSets,tempSet,nums,i+1);

    tempSet.remove(tempSet.size()-1);
  }
}
}
