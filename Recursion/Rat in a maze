//{ Driver Code Starts
// Initial Template for Java

import java.util.*;

class Rat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();

            Solution obj = new Solution();
            ArrayList<String> res = obj.findPath(a);
            Collections.sort(res);
            if (res.size() > 0) {
                for (int i = 0; i < res.size(); i++) System.out.print(res.get(i) + " ");
                System.out.println();
            } else {
                System.out.println(-1);
            }
        }
    }
}

// } Driver Code Ends


class Solution {
    public ArrayList<String> findPath(int[][] mat) {
ArrayList<String> ans=new ArrayList<>();
int n=mat.length;
int m =mat[0].length;
int[][] vis=new int[n][m];
int[] drow={1,0,0,-1};
int[] dcol={0,-1,1,0};
if(mat[0][0]==1){
    path(mat,vis,ans,0,0,n,m,"",drow,dcol);
}

return ans;
    }
    static void path(int [][] mat,int[][] vis, ArrayList<String> ans ,int i,int j,int n,int m,String a,int[] drow,int[] dcol){
        if(i==n-1 && j==m-1){
            ans.add(a);
            return;
        }
        //first going down as lexicographic
        String dir="DLRU";
        for(int ind=0;ind<4;ind++){
            int row=i+drow[ind];
            int col=j+dcol[ind];
            
            if(row<n && col<m && row>=0 && col>=0 && vis[row][col]!=1 && mat[row][col]==1){
                vis[i][j]=1;
                path(mat,vis,ans,row,col,n,m,a+dir.charAt(ind),drow,dcol);
                vis[i][j]=0;
            }
            
        }
        
        
        
    }
}
