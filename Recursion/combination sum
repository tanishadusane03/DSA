class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        int n=candidates.length;
        List<List<Integer>> ans= new ArrayList<>();
        List<Integer> ds=new ArrayList<>();
        findsum(ds,ans,target,candidates,0,n);
        return ans;

        
    }

    public static void findsum(List<Integer> ds, List<List<Integer>> ans,int target,int [] candidates,int ind,int n){
        if(ind==n){
            if (target==0){
                ans.add(new ArrayList<>(ds));
            }
            return ;
        }

        if(candidates[ind]<=target){
                // if we are picking the element at the same index
            ds.add(candidates[ind]);
            findsum(ds,ans,target-candidates[ind],candidates,ind,n);
            // if we are not picing the element at the same index
            ds.remove(ds.size()-1);
        }
        findsum(ds,ans,target,candidates,ind+1,n);

    }
}
