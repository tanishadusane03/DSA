class Solution {
    public String countAndSay(int n) {
        // Base case
        if (n == 1) {
            return "1";
        }
        
        // Recursive call
        String previous = countAndSay(n - 1);
        StringBuilder sb = new StringBuilder();
        
        // Counting and building the result
        int length = previous.length();
        int count = 1;
        char currentChar = previous.charAt(0);
        
        for (int i = 1; i < length; i++) {
            if (previous.charAt(i) == currentChar) {
                count++;
            } else {
                sb.append(count).append(currentChar);
                currentChar = previous.charAt(i);
                count = 1;
            }
        }
        // Append the last group
        sb.append(count).append(currentChar);
        
        return sb.toString();
    }
}
