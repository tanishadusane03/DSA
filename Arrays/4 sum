class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;

        if (n < 4) {
            return result;
        }

        Arrays.sort(nums);

        for (int i = 0; i < n - 3; i++) {
            // Skip duplicate elements for the first element
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            for (int j = i + 1; j < n - 2; j++) {
                // Skip duplicate elements for the second element
                if (j > i + 1 && nums[j] == nums[j - 1]) continue;

                int k = j + 1;
                int m = n - 1;

                while (k < m) {
                    long sum = (long)nums[i] + nums[j] + nums[k] + nums[m];

                    if (sum < target) {
                        k++;
                    } else if (sum > target) {
                        m--;
                    } else {
                        result.add(Arrays.asList(nums[i], nums[j], nums[k], nums[m]));

                        // Skip duplicate elements for the third element
                        while (k < m && nums[k] == nums[k + 1]) k++;
                        // Skip duplicate elements for the fourth element
                        while (k < m && nums[m] == nums[m - 1]) m--;

                        k++;
                        m--;
                    }
                }
            }
        }
        
        return result;
    }

    
}
