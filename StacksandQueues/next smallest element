public class Solution {
    public int[] prevSmaller(int[] A) {
        int n = A.length;
        int[] result = new int[n];
        Stack<Integer> st = new Stack<>();
        
        for (int i = 0; i < n; i++) {
            // While stack is not empty and the top of the stack is greater than or equal to A[i]
            while (!st.isEmpty() && st.peek() >= A[i]) {
                st.pop();
            }
            
            // If the stack is empty, no smaller element exists, otherwise top of the stack is the previous smaller element
            if(st.isEmpty()){
                result[i]=-1;
            }
            else{
                result[i]=st.peek();
            }
            
            // Push the current element onto the stack
            st.push(A[i]);
        }
        
        return result;
    }
}
