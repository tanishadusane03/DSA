public class Solution {
    public void reorderList(ListNode head) {
        if (head == null || head.next == null) return;

        // Step 1: Find the middle of the list
        ListNode slow = head, fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }

        // Step 2: Reverse the second half of the list
        ListNode prev = null, next = null;
        while (slow != null) {
            next = slow.next;
            slow.next = prev;
            prev = slow;
            slow = next;
        }

        // Step 3: Merge the two halves
       ListNode fh=head;
       ListNode sh=prev;

       while(sh.next!=null){
        next=fh.next;
        prev=sh.next;

        fh.next=sh;
        sh.next=next;

        fh=next;
        sh=prev;
       }
    }
}
